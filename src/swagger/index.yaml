openapi: 3.0.0
info:
  version: 1.0.0
  title: Recommender
  description: Service for Artist Recommendation
servers:
  - url: http://localhost:3000/cc-bff
  - url: https://concertcuartor.rebaseitlabs.in/cc-bff
paths:
  /artists/recommendations/:
    post:
      tags:
        - artist recommendations
      description: Create new recommendation
      parameters:
        - in: header
          name: userid
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionData'
      responses:
        '200':
          description: Created new recommendation successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcertCreationResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    get:
      tags:
        - artist recommendations
      description: get all recommendations.
      parameters:
        - in: header
          name: userid
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Returns metadata of all saved recommendations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcertCreationResponseArray'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    patch:
      tags:
        - artist recommendations
      description: discard the given artist for given recommendation.
      parameters:
        - in: header
          name: userid
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchRecommendationRequest'
      responses:
        '200':
          description: Successfully discarded artist for given recommendation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchRecommendationResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /artists/recommendations/{id}:
    delete:
      tags:
        - artist recommendations
      description: Delete recommendation by id.
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - in: header
          name: userid
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfully deleted recommendation for given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCurationResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    get:
      tags:
        - artist recommendations
      description: get the match data based on the given questions
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - in: header
          name: userid
          schema:
            type: string
          required: true
      responses:
        '200':
          description: A list of recommended artists with respect to form id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/matchData'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /artists/recommendations/documents:
    get:
      tags:
        - artist recommendation documents
      description: get all documents
      parameters:
        - in: header
          name: userid
          schema:
            type: string
          required: true
      responses:
        '200':
          description: retrieved all documents successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        createdOn:
                          type: string
                        mode:
                          type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      tags:
        - artist recommendation documents
      description: create new document
      parameters:
        - in: header
          name: userid
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                templateId:
                  type: string
                name:
                  type: string
                recommendationId:
                  type: string
                fields:
                  type: object
                required:
                  type: object
      responses:
        '200':
          description: returns document after successfully creating it
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      document:
                        type: object
                        properties:
                          id:
                            type: string
                          name:
                            type: string
                          createdOn:
                            type: string
                          createdBy:
                            type: string
                          mode:
                            type: string
                          html:
                            type: string
                          contract:
                            type: object
                            properties:
                              envelopeId:
                                type: string
                              url:
                                type: string
                              dateCreated:
                                type: string
                              signDate:
                                type: string
                              status:
                                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /artists/recommendations/documents/{id}:
    get:
      tags:
        - artist recommendation documents
      description: get document for given id
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - in: header
          name: userid
          schema:
            type: string
          required: true
      responses:
        '200':
          description: successfully retrieved document for given id
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      createdOn:
                        type: string
                      createdBy:
                        type: string
                      mode:
                        type: string
                      html:
                        type: string
                      contract:
                        type: object
                        properties:
                          envelopeId:
                            type: string
                          url:
                            type: string
                          dateCreated:
                            type: string
                          signDate:
                            type: string
                          status:
                            type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    patch:
      tags:
        - artist recommendation documents
      description: edit document for given id
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - in: header
          name: userid
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                html: {}
      responses:
        '200':
          description: successfully updated the document
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      tags:
        - artist recommendation documents
      description: delete document with given id
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - in: header
          name: userid
          schema:
            type: string
          required: true
      responses:
        '200':
          description: successfully updated the document
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /artists/recommendations/documents/share/{id}:
    post:
      tags:
        - artist recommendation documents
      description: create new document
      parameters:
        - in: header
          name: userid
          schema:
            type: string
          required: true
        - in: path
          name: id
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                files:
                  type: array
                  items:
                    type: string
                    format: binary
                emails: 
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: successfully updated the document
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /artists/recommendations/documents/ids: 
    post:
      tags:
        - artist recommendation documents
      description: create new document
      parameters:
        - in: header
          name: userid
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ids: 
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: successfully updated the document
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        createdOn:
                          type: string
                        mode:
                          type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /artists/recommendations/documents/templates:
    get:
      tags:
        - document templates
      description: get metadata of all templates
      parameters:
        - in: header
          name: userid
          schema:
            type: string
          required: true
      responses:
        '200':
          description: successfully retrieved metadata of all templates
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        templateId: {}
                        templateImg: {}
                        templateName: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /artists/recommendations/documents/templates/{id}:
    get:
      tags:
        - document templates
      description: get questions for given template id
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - in: header
          name: userid
          schema:
            type: string
          required: true
      responses:
        '200':
          description: successfully retrieved questions for given template
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      templateId:
                        type: string
                      questions:
                        type: array
                        items:
                          type: object
                          properties:
                            question:
                              type: string
                            field:
                              type: string
                            type:
                              type: string
                      required:
                        type: array
                        items:
                          type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /artists/recommendations/documents/docusign:
    get:
      tags:
        - docusign
      description: get questions for given template id
      parameters:
        - in: header
          name: userid
          schema:
            type: string
          required: true
      responses:
        '200':
          description: successfully added docusign
          content:
            application/json:
              schema:
                type: array
                items: 
                  type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /artists/recommendations/documents/docusign/{id}:
    post:
      tags:
        - docusign
      description: get questions for given template id
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - in: header
          name: userid
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                emailSubject:
                  type: string
                documents: 
                  type: array
                  items:
                    type: object
                    properties:
                      htmlDefinition:
                        type: object
                        properties: 
                          source: 
                            type: string
                      documentId:
                        type: string
                      name: 
                        type: string
                recipients:
                  type: object
                  properties: 
                    carbonCopies:
                      type: array
                      items:
                        type: object
                        properties:
                          email:
                           type: string
                          name:
                           type: string
                          recipientId:
                           type: string
                          routingOrder:
                           type: string
                    signers:
                      type: array
                      items:
                        type: object
                        properties:
                          email:
                           type: string
                          name:
                           type: string
                          recipientId:
                           type: string
                          routingOrder:
                           type: string
                          tabs: 
                            type: object
                            properties:
                              signHereTabs: 
                                type: array
                                items:
                                  type: object
                                  properties:
                                    anchorString:
                                     type: string
                                    anchorUnits:
                                     type: string
                                    anchorXOffset:
                                     type: string
                                    anchorYOffset:
                                     type: string
                status:
                  type: string
      responses:
        '200':
          description: successfully retrieved docusign
          content:
            application/json:
              schema:
                type: object
                properties: 
                  success: 
                    type: boolean
                  data: 
                    type: object
                    properties:
                      envelopeId:
                        type: string
                      uri:
                        type: string
                      statusDateTime:
                        type: string
                      status:
                        type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /artists/recommendations/documents/docusign/{envelopeId}:
    get:
      tags:
        - docusign
      description: get questions for given template id
      parameters:
        - in: path
          name: envelopeId
          schema:
            type: string
          required: true
        - in: header
          name: userid
          schema:
            type: string
          required: true
      responses:
        '200':
          description: successfully added docusign
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /artists/recommendations/documents/docusign/{envelopeId}/{documentId}:
    get:
      tags:
        - docusign
      description: get questions for given template id
      parameters:
        - in: path
          name: envelopeId
          schema:
            type: string
          required: true
        - in: path
          name: documentId
          schema:
            type: string
          required: true
        - in: header
          name: userid
          schema:
            type: string
          required: true
      responses:
        '200':
          description: successfully added docusign
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /artists/{id}:
    get:
      tags:
        - artist
      description: get artist data with artist id
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - in: header
          name: userid
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Artist Schema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/artistData'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /artists/{skip}/{limit}: 
    get:
      tags:
        - artist
      description: get artist data
      parameters:
        - in: path
          name: skip
          schema:
            type: string
          required: true
        - in: path
          name: limit
          schema:
            type: string
          required: true
        - in: header
          name: userid
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Artist Schema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/artistData'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /auth/login:
    post:
      tags:
        - auth
      description: Login to system by username and password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: Login Sucessfull
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginStatus'
        '404':
          description: Username or password incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginStatusFailure'
  /auth/signup:
    post:
      tags:
        - auth
      description: Login to system by username and password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUp'
      responses:
        '200':
          description: SignUp Sucessfull
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignUpStatus'
        '401':
          description: Duplicate User dectected.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignUpStatusFailure'
  /venues:
    post:
      tags:
        - venues
      description: Create New Venue
      parameters:
        - in: header
          name: userid
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                address:
                  $ref: '#/components/schemas/Address'
                capacity:
                  type: number
      responses:
        '200':
          description: Created new venue successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      venue:
                        $ref: '#/components/schemas/NewVenue'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    patch:
      tags:
        - venues
      description: update the venue
      parameters:
        - in: header
          name: userid
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewVenue'
      responses:
        '200':
          description: Successfully updated venue
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    get:
      tags:
        - venues
      description: get venue by id
      parameters:
        - in: header
          name: userid
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Returns all venues sucessfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/NewVenue'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /venues/{id}:
    get:
      tags:
        - venues
      description: get venue by id
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - in: header
          name: userid
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Returns venue of respective id sucessfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/NewVenue'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      tags:
        - venues
      description: Delete venue by id.
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - in: header
          name: userid
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfully deleted venue by id
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /venues/{skip}/{limit}:
    get:
      tags:
        - venues
      description: get venues
      parameters:
        - in: path
          name: skip
          schema:
            type: string
          required: true
        - in: path
          name: limit
          schema:
            type: string
          required: true
        - in: header
          name: userid
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Returns venues
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      venues:
                        type: array
                        items:
                          $ref: '#/components/schemas/NewVenue'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /brands:
    post:
      tags:
        - brands
      description: Create New Brand
      parameters:
        - in: header
          name: userid
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                logo:
                  type: string
                website:
                  type: string
                contact:
                  type: number
      responses:
        '200':
          description: Created new brand successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      brand:
                        $ref: '#/components/schemas/NewBrand'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    patch:
      tags:
        - brands
      description: update the brand
      parameters:
        - in: header
          name: userid
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewBrand'
      responses:
        '200':
          description: Successfully updated brand
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /brands/{id}:
    get:
      tags:
        - brands
      description: get brand by id
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - in: header
          name: userid
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Returns brand of respective id sucessfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/NewBrand'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      tags:
        - brands
      description: Delete brand by id.
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - in: header
          name: userid
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfully deleted brand by id
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /brands/{skip}/{limit}:
    get:
      tags:
        - brands
      description: get brands
      parameters:
        - in: path
          name: skip
          schema:
            type: string
          required: true
        - in: path
          name: limit
          schema:
            type: string
          required: true
        - in: header
          name: userid
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Returns brands
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      brands:
                        type: array
                        items:
                          $ref: '#/components/schemas/NewBrand'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /genres:
    post:
      tags:
        - genres
      description: Create New Genre
      parameters:
        - in: header
          name: userid
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
      responses:
        '200':
          description: Created new genre successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      genre:
                        $ref: '#/components/schemas/NewGenre'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    patch:
      tags:
        - genres
      description: update the brand
      parameters:
        - in: header
          name: userid
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGenre'
      responses:
        '200':
          description: Successfully updated genre
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /genres/{id}:
    get:
      tags:
        - genres
      description: get genre by id
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - in: header
          name: userid
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Returns genre of respective id sucessfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/NewGenre'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      tags:
        - genres
      description: Delete genre by id.
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
        - in: header
          name: userid
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successfully deleted genre by id
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /genres/{skip}/{limit}:
    get:
      tags:
        - genres
      description: get genres
      parameters:
        - in: path
          name: skip
          schema:
            type: string
          required: true
        - in: path
          name: limit
          schema:
            type: string
          required: true
        - in: header
          name: userid
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Returns genres
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      genres:
                        type: array
                        items:
                          $ref: '#/components/schemas/NewGenre'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
components:
  schemas:
    QuestionData:
      type: object
      properties:
        userId:
          type: string
        concertName:
          type: string
        eventType:
          type: string
        venue:
          type: array
          items:
            type: string
        artistBudget:
          type: object
          properties:
            min:
              type: number
            max:
              type: number
        sponsorshipType:
          type: string
        wantedBrands:
          type: array
          items:
            type: object
            properties:
              brandName:
                type: string
              brandId:
                type: string
        unwantedBrands:
          type: array
          items:
            type: object
            properties:
              brandName:
                type: string
              brandId:
                type: string
        targetAudience:
          type: object
          properties:
            ageGroup:
              type: array
              items:
                type: string
            genre:
              type: array
              items:
                type: object
                properties:
                  genreName:
                    type: string
                  genreId:
                    type: string
            gender:
              type: array
              items:
                type: string
        whatSellsMost:
          type: object
          properties:
            beer:
              type: array
              items:
                type: object
                properties:
                  brandName:
                    type: string
                  brandId:
                    type: string
            liquor:
              type: array
              items:
                type: object
                properties:
                  brandName:
                    type: string
                  brandId:
                    type: string
            softDrinks:
              type: array
              items:
                type: object
                properties:
                  brandName:
                    type: string
                  brandId:
                    type: string
    matchData:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            concertData:
              type: object
              properties:
                id:
                  type: string
                userId:
                  type: string
                concertName:
                  type: string
                eventType:
                  type: string
                venue:
                  type: array
                  items:
                    type: string
                artistBudget:
                  type: object
                  properties:
                    max:
                      type: number
                    min:
                      type: number
                sponsorshipType:
                  type: string
                wantedBrands:
                  type: array
                  items:
                    type: object
                    properties:
                      brandId:
                        type: string
                      brandName:
                        type: string
                unwantedBrands:
                  type: array
                  items:
                    type: object
                    properties:
                      brandId:
                        type: string
                      brandName:
                        type: string
                targetAudience:
                  type: object
                  properties:
                    genre:
                      type: array
                      items:
                        type: object
                        properties:
                          genreId:
                            type: string
                          genreName:
                            type: string
                    gender:
                      type: array
                      items:
                        type: string
                    ageGroup:
                      type: array
                      items:
                        type: string
                whatSellsMost:
                  type: object
                  properties:
                    beer:
                      type: array
                      items:
                        type: object
                        properties:
                          brandId:
                            type: string
                          brandName:
                            type: string
                    liquor:
                      type: array
                      items:
                        type: object
                        properties:
                          brandId:
                            type: string
                          brandName:
                            type: string
                    softDrinks:
                      type: array
                      items:
                        type: object
                        properties:
                          brandId:
                            type: string
                          brandName:
                            type: string
                dateCreated:
                  type: string
            artists:
              type: array
              items:
                type: object
            discardedArtists:
              type: array
              items:
                type: object
            documents:
              type: array
              items:
                type: object
            lastChangedUserId:
              type: string
            status:
              type: boolean
    
    artistSingleData:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            gender:
              type: string
            associatedBrands:
              type: array
              items:
                type: string
            venues:
              type: array
              items:
                type: string
            country:
              type: string
            image:
              type: string
            coverImage:
              type: string
            bio:
              type: string
            manager:
              type: string
            contact:
              type: string
            address:
              type: string
            popularity:
              type: number
            audience:
              type: array
              items:
                type: object
                properties:
                  fields:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        value:
                          type: number
                  demographicName:
                    type: string
            mediaHandles:
              type: array
              items:
                type: object
                properties:
                  url:
                    type: string
                  logo:
                    type: string
                  followers:
                    type: number
                  handleName:
                    type: string
    artistData:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            artists:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  gender:
                    type: string
                  associated_brands:
                    type: array
                    items:
                      type: string
                  venues:
                    type: array
                    items:
                      type: string
                  country:
                    type: string
                  image:
                    type: string
                  cover_image:
                    type: string
                  bio:
                    type: string
                  manager:
                    type: string
                  contact:
                    type: string
                  address:
                    type: string
                  popularity:
                    type: number
                  audience:
                    type: array
                    items:
                      type: object
                      properties:
                        fields:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                              value:
                                type: number
                        demographicName:
                          type: string
                  media_handles:
                    type: array
                    items:
                      type: object
                      properties:
                        url:
                          type: string
                        logo:
                          type: string
                        followers:
                          type: number
                        handleName:
                          type: string

    NotificationData:
      type: object
      properties:
        type:
          type: string
          enum:
            - email
            - facebook
            - twitter
            - message
        recipients:
          type: array
          items:
            type: string
        subject:
          type: string
        message:
          type: string
    NotificationSuccess:
      type: object
      properties:
        message:
          type: string
          enum:
            - email sent successfully
            - facebook notification sent successfully
            - twitter notification send successfully
    BadRequest:
      type: object
      properties:
        message:
          type: string
        error:
          type: boolean
    NotificationServerError:
      type: object
      properties:
        message:
          type: string
        error:
          type: boolean
    ConcertCreationResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            id:
              type: string
            concertName:
              type: string
            status:
              type: boolean
            dateCreated:
              type: string

    ConcertCreationResponseArray:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            recommendations:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  concertName:
                    type: string
                  status:
                    type: boolean
                  dateCreated:
                    type: string
    DeleteCurationResponse:
      type: object
      properties:
        formId:
          type: string
        success:
          type: boolean
    PatchRecommendationRequest:
      type: object
      properties:
        id:
          type: string
        artistId:
          type: string
    PatchRecommendationResponse:
      type: object
      properties:
        success:
          type: boolean
    Login:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    SignUp:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    LoginStatus:
      type: object
      properties:
        success:
          type: boolean
    LoginStatusFailure:
      type: object
      properties:
        success:
          type: boolean
          example: false
    SignUpStatus:
      type: object
      properties:
        status:
          type: boolean
    SignUpStatusFailure:
      type: object
      properties:
        status:
          type: boolean
          example: false
    Address:
      type: object
      properties:
        pincode:
          type: number
        country:
          type: string
        city:
          type: string
        geoLocation:
          type: object
          properties:
            lat:
              type: number
            long:
              type: number
    NewVenue:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        capacity:
          type: number
        bowie_venue_id:
          type: string
        url:
          type: string
        lat:
          type: number
        long:
          type: number
        street:
          type: string
        city:
          type: string
        state:
          type: string
        postal_code:
          type: string
        country:
          type: string
        comments:
          type: string
        last_updated_by:
          type: string
        last_updated_at:
          type: string
    InternalServerError:
      type: object
      properties:
        error:
          type: boolean
        message:
          type: string
    NewBrand:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        logo:
          type: string
        website:
          type: string
        contact:
          type: number
    NewGenre:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
